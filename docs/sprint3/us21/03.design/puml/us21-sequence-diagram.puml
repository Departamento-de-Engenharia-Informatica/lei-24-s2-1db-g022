@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

title UI Sequence Diagram (SD) - US21 - Add new entry to the To-Do-List

autonumber

'hide footbox
actor "Green Spaces Manager (GSM)" as GSM
participant ":RegisterEntryToDoListUI" as UI
participant ":RegisterEntryToDoListController" as CTRL
participant ":Repositories" as RepositorySingleton
participant "repositories\n:Repositories" as PLAT
participant "manager\n:GreenSpaceManager" as GSMO
participant "greenSpaces\nGreenSpaces" as GREENSPACES
participant "greenSpaceMapper\n:GreenSpaceMapper" as GSMP
participant "taskRepository\n:TaskRepository" as TR
participant "taskMapper\n:TaskMapper" as TMP
participant "greenSpaceRepository\n:GreenSpaceRepository" as GSR
participant "greenSpace\nGreenSpace" as GREENSPACE
participant "task\nTask" as TASK
participant "toDoList\n:ToDoList" as TDL

activate GSM

        GSM -> UI : asks to register a new entry in the to do list
    activate UI

        UI -> CTRL : getGreenSpaceManagerGSpace()
    activate CTRL

        CTRL -> CTRL : getGSMFromSession()
    activate CTRL

        ref over CTRL
            Design in US20
        end ref

        CTRL --> CTRL : manager
    deactivate CTRL

        CTRL -> GSMO : getListGreenSpace()
    activate GSMO

        GSMO -> GREENSPACES : getGreenSpaceList()
    activate GREENSPACES

        GREENSPACES --> GSMO : greenSpaceList
    deactivate GREENSPACES

        GSMO --> CTRL : greenSpaceList
    deactivate GSMO

        CTRL -> GSMP : toDTO(greenSpaceList)
    activate GSMP

        ref over GSMP
            Green Space List To DTO
        end ref

       GSMP --> CTRL : greenSpaceListDto
    deactivate GSMP

        CTRL --> UI : greenSpaceListDto
    deactivate CTRL

        UI --> GSM : shows all the Green Spaces managed by the GSM \n and asks to select one
    deactivate UI

        GSM->UI: chooses one
    activate UI

        UI-> CTRL : getAllTasks()
    activate CTRL

        CTRL -> RepositorySingleton : getInstance()
    activate RepositorySingleton

        RepositorySingleton --> CTRL: repositories
    deactivate RepositorySingleton

        CTRL -> PLAT: getTaskRepository()
    activate PLAT

        PLAT --> CTRL: taskRepository
    deactivate PLAT

        CTRL -> TR : getAllTaskDescriptions()
    activate TR

        TR --> CTRL : taskList
    deactivate TR

        CTRL -> TMP : toDTO(taskList)
    activate TMP

        ref over TMP
            Task List To DTO
        end ref

        TMP --> CTRL : taskListDto
    deactivate TMP

        CTRL --> UI : taskListDto
    deactivate CTRL

        UI --> GSM : shows all the tasks and asks to select one
    deactivate UI

        GSM -> UI : Chooses one
    activate UI

        UI --> GSM : requests data(urgency,aproxExpectedDuration)
    deactivate UI

        GSM -> UI : types requested data
    activate UI

        UI --> GSM : displays the data and requests confirmation
    deactivate UI

        GSM -> UI : confirms and submits data
    activate UI

        UI -> CTRL: registerEntryToDoList(greenSpaceName,taskDescription,urgency,aproxExpectedDuration)
    activate CTRL

        CTRL -> RepositorySingleton : getInstance()
    activate RepositorySingleton

        RepositorySingleton --> CTRL: repositories
    deactivate RepositorySingleton

        CTRL -> PLAT: getGreenSpaceRepository()
    activate PLAT

        PLAT --> CTRL: greenSpaceRepository
    deactivate PLAT

        CTRL -> GSR : getGreenSpaceByName(greenSpaceName)
    activate GSR

        loop for each greenSpace in greenSpaceList

        GSR -> GREENSPACE : hasName(greenSpaceName)

        activate GREENSPACE

            GREENSPACE --> GSR : true/false

        deactivate GREENSPACE

        end

        GSR --> CTRL : greenSpace
    deactivate GSR

        CTRL -> PLAT: getTaskRepository()
    activate PLAT

        PLAT --> CTRL: taskRepository
    deactivate PLAT

        CTRL -> TR : getTaskByDescription(taskDescription)
    activate TR
        loop for each task in taskList

        TR -> TASK : hasDescription(taskDescription)

        activate TASK

            TASK --> TR : true/false

        deactivate TASK

        end

        TR --> CTRL : task
    deactivate TR

        CTRL -> TDL : registerEntryToDoList(greenSpace,task,urgency,aproxExpectedDuration)
    activate TDL

        ref over TDL
            Register TaskToDoList
        end

        TDL --> CTRL : taskTdl
    deactivate TDL

        CTRL --> UI : taskTdl
    deactivate CTRL

        UI --> GSM : displays operation success
    deactivate UI

deactivate GSM
@enduml