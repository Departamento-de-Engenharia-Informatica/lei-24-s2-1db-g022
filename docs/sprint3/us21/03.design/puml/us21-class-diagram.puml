@startuml
'skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline
'skinparam linetype orto

skinparam classAttributeIconSize 0

package "UI" <<Folder>> {
    class RegisterEntryToDoListUI {
    }
}


package "Controller" <<Folder>> {

    class RegisterEntryToDoListController {
        + RegisterEntryToDoListController(greenSpaceRepository, collaboratorRepository, taskRepository, toDoList)
        + getGreenSpaceManagerGSpace()
        + getGreenSpace()
        + getTask()
        + registerEntryToDoList(greenSpaceName,taskDescription,urgency,aproxExpectedDuration)
        - getGSMFromSession()
    }

}

'left to right direction
package "Domain" <<Folder>> {

    package "Domain.Application" <<Folder>> {

        class ApplicationSession
        {
            + static getInstance()
            + getCurrentSession()
        }

        class UserSession
        {
            + getUserEmail()
        }
    }

    package "Domain.DTO" <<Folder>> {

        class TaskMapper{
            + List<TaskDto> toDTO(List<Task>list)
            + TaskDto toDTO(Task obj)
        }

        class TaskDto{
            + String taskDescription
            + TaskDto(taskDescription)
        }

        class GreenSpaceMapper{
            + List<GreenSpaceDto> toDTO(List<GreenSpace>list)
            + GreenSpaceDto toDTO(GreenSpace obj)
        }

        class GreenSpaceDto{
            + String greenSpaceName
            + GreenSpaceDto(greenSpaceName)
        }
    }

    package "Domain.Model" <<Folder>> {

        interface GreenSpace <<Interface>>{
            + getName()
            + getArea()
            + getAddress()
            + hasName(greenSpaceName)
        }

        class GreenSpaces{

            + getGreenSpaceList()
        }

        class Garden implements GreenSpace{
            - String name
            - int area
            - Address

            + Garden(name, area, streetName, doorNumber, postCodeNumber, localization)
            + getName()
            + getArea()
            + getAddress()
            + hasName(greenSpaceName)
        }

        class MediumPark implements GreenSpace{
            - String name
            - int area
            - Address

            + getName()
            + getArea()
            + getAddress()
            + MediumPark(name, area, streetName, doorNumber, postCodeNumber, localization)
            + hasName(greenSpaceName)
        }

        class LargePark implements GreenSpace{
            - String name
            - int area
            - Address

            + getName()
            + getArea()
            + getAddress()
            + LargePark(name, area, streetName, doorNumber, postCodeNumber, localization)
            + hasName(greenSpaceName)
        }

        interface ICollaborator <<Interface>>{
            + getEmail()
            + hasEmail(email)
        }

        class Address {
            - String street
            - int doorNumber

            + Address(street, doorNumber, postCodeNumber, localization)
            - validation()
        }

        class PostCode{
            - String postCodeNumber
            - String localization

            + PostCode(postCodeNumber,localization)
            - validation()
        }

        class Task {
            - String taskDescription

            + Task(taskDescription)
            + hasDescription(taskDescription)
        }

        class TaskToDoList {
            - String urgency
            - int aproxExpectedDuration
            - String status
            - String taskRef

            + TaskToDoList(greenSpace, task, urgency, aproxExpectedDuration, taskRef)
            - validateTaskToDoList()
        }

        class GreenSpaceManager implements ICollaborator{

            + getListGreenSpace()
        }

        class ToDoList{

            + ToDoList()
            + registerEntryToDoList(greenSpace,task,urgency,aproxExpectedDuration)
            - addTaskToDoList(taskTdl)
            - validateToDoList(taskTdl)
            - generateUniqueReference()
            - validateref(taskRef)
        }

    }

    package "Domain.Repository" <<Folder>> {

        class Repositories {

            - Repositories()
            + getInstance() : Repositories
            + getGreenSpaceRepository()
            + getCollaboratorRepository()
            + getTaskRepository()
            + getToDoList()
        }

        class CollaboratorRepository {

            + getCollaboratorByEmail(email)
        }

        class GreenSpaceRepository {

            + getGreenSpaceByName(greenSpaceName)
        }

        class TaskRepository {

            + getAllTaskDescriptions()
            + getTaskByDescription(taskDescription)
        }
    }
}

'-------------------TaskMapper-------------------
TaskMapper ..> TaskDto
TaskMapper ..> Task

'-------------------GreenSpaceMapper-------------------
GreenSpaceMapper ..> GreenSpaceDto
GreenSpaceMapper ..> GreenSpace

'-------------------Instance-------------------
Repositories -> Repositories : instance
ApplicationSession -> ApplicationSession : instance

'-------------------UI-------------------
RegisterEntryToDoListUI ..> RegisterEntryToDoListController
RegisterEntryToDoListUI ..> TaskDto
RegisterEntryToDoListUI ..> GreenSpaceDto

'-------------------Controller-------------------
RegisterEntryToDoListController ...> Repositories : repositories
RegisterEntryToDoListController ...> ApplicationSession
RegisterEntryToDoListController ...> UserSession
RegisterEntryToDoListController ...> GreenSpaceRepository
RegisterEntryToDoListController ...> CollaboratorRepository
RegisterEntryToDoListController ...> TaskRepository
RegisterEntryToDoListController ...> ICollaborator
RegisterEntryToDoListController ...> GreenSpace
RegisterEntryToDoListController ...> ToDoList
RegisterEntryToDoListController ...> Task
RegisterEntryToDoListController ...> TaskToDoList
RegisterEntryToDoListController ...> GreenSpaceManager
RegisterEntryToDoListController ...> Address
RegisterEntryToDoListController ...> PostCode
RegisterEntryToDoListController ...> GreenSpaces
RegisterEntryToDoListController ...> TaskMapper
RegisterEntryToDoListController ...> GreenSpaceMapper
RegisterEntryToDoListController ...> TaskDto
RegisterEntryToDoListController ...> GreenSpaceDto

'-------------------ApplicationSession-------------------
ApplicationSession --> "1" UserSession : userSession

'-------------------Repositories-------------------
Repositories ----> "1" GreenSpaceRepository : GreenSpaceRepository
Repositories ---> "1" CollaboratorRepository : CollaboratorRepository
Repositories -> "1" ToDoList : ToDoList
Repositories ---> "1" TaskRepository : TaskRepository

'-------------------CollaboratorRepository-------------------
CollaboratorRepository "1"  ---> "*" ICollaborator : collaboratorList

'-------------------GreenSpaceRepository-------------------
GreenSpaceRepository "1" -> "*" GreenSpace : greenSpaceList

'-------------------TaskRepository-------------------
TaskRepository "1" --> "*" Task : taskList

'-------------------Address-------------------
Address "1..*" *-- "1" PostCode : postCode

'-------------------GreenSpaceManager-------------------
GreenSpaceManager "1..*" <-- "1..*" TaskToDoList : created by
GreenSpaceManager "1" ----> "1" GreenSpaces : greenSpaces

'-------------------GreenSpace-------------------
GreenSpace "1" *-- "1" Address : is located in

'-------------------GreenSpaces-------------------
GreenSpaces "1" -> "*" GreenSpace: greenSpaceList

'-------------------ToDoList-------------------
ToDoList "1" --> "*" TaskToDoList : taskTdlList

'-------------------TaskToDoList-------------------
TaskToDoList "1..*" -> "1" GreenSpace : greenSpace
TaskToDoList "1..*" --> "1" Task : task

@enduml