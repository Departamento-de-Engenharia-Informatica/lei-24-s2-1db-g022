@startuml
'https://plantuml.com/sequence-diagram
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

participant ":AssignTeamAgendaController" as CTRL
participant ":Repositories" as RepositorySingleton
participant "repositories\n:Repositories" as PLAT
participant "agenda\n:Agenda" as AGENDA
participant "tasksAgenda\n:TasksAgenda" as TASKSAGENDA
participant "listTaskAgenda\n:List<AgendaTask>" as LSTASK
participant "taskAgenda\n:TaskAgenda" as TASK
participant "greenSpace\n:GreenSpace" as GREENSPACE

autonumber 11

--> CTRL : getAllTaskByGreenSpace(greenSpaceList)

autonumber 11.1

activate CTRL

group Get All Task By GreenSpace

CTRL -> RepositorySingleton : getInstance()

activate RepositorySingleton

RepositorySingleton --> CTRL : repositories

deactivate RepositorySingleton

CTRL -> PLAT : getAgenda()

activate PLAT

PLAT --> CTRL: agenda

deactivate PLAT

CTRL -> AGENDA : getAllTaskByGreenSpace(greenSpaceList)

activate AGENDA

AGENDA -> TASKSAGENDA : getAllTaskByGreenSpace(greenSpaceList)

activate TASKSAGENDA

TASKSAGENDA -> LSTASK** : create

loop for each Task in listTasksAgenda[in TasksAgenda]

TASKSAGENDA -> TASK : verifyGreenSpace(greenSpaceList)

activate TASK

TASK -> TASK : verifyNullTeam()

activate TASK

TASK --> TASK : true/false

deactivate TASK

alt verifyNullTeam == true

loop for each GreenSpace in ListGreenSpace

TASK -> GREENSPACE : equalsGreenSpace(greenSpace)

activate GREENSPACE

GREENSPACE --> TASK : true/false

deactivate GREENSPACE

end

end
TASK -> TASKSAGENDA : taskAgenda

deactivate TASK

alt verifyGreenSpace != null

TASKSAGENDA -> LSTASK : add(taskAgenda)

activate LSTASK

LSTASK --> TASKSAGENDA : true/false

deactivate LSTASK

end

end

TASKSAGENDA --> AGENDA : listTaskAgenda

deactivate TASKSAGENDA

AGENDA --> CTRL : listTaskAgenda

deactivate AGENDA

end

autonumber 12

<--CTRL : listTaskAgenda

deactivate CTRL
@enduml