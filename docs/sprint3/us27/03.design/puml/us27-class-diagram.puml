@startuml
'skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline
'skinparam linetype orto

skinparam classAttributeIconSize 0

package "UI" <<Folder>> {
    class ListGreenSpacesUI {
    }
}


package "Controller" <<Folder>> {

    class ListGreenSpacesController {
        + ListGreenSpacesController(collaboratorRepository)
        + getGreenSpaceManagerGSpaceList()
        - getGSMFromSession()
    }

}

'left to right direction
package "Domain" <<Folder>> {

    package "Domain.Application" <<Folder>> {

        class ApplicationSession
        {
            + static getInstance()
            + getCurrentSession()
        }

        class UserSession
        {
            + getUserEmail()
        }
    }

    package "Domain.DTO" <<Folder>> {

        class GreenSpaceMapper{
            + List<GreenSpaceDto> toDTO(List<GreenSpace>list)
            + GreenSpaceDto toDTO(GreenSpace obj)
        }

        class GreenSpaceDto{
            + String greenSpaceName
            + int area

            + GreenSpaceDto(greenSpaceName, area)
        }
    }

    package "Domain.Model" <<Folder>> {

        interface GreenSpace <<Interface>>{
            + getName()
            + getArea()
            + isAreaLarger(area)
        }

        class GreenSpaces{

            +getSortedGreenSpaces()
        }

        class Garden implements GreenSpace{
            - String name
            - int area

            + getName()
            + getArea()
            + isAreaLarger(area)
        }

        class MediumPark implements GreenSpace{
            - String name
            - int area

            + getName()
            + getArea()
            + isAreaLarger(area)
        }

        class LargePark implements GreenSpace{
            - String name
            - int area

            + getName()
            + getArea()
            + isAreaLarger(area)
        }

        interface ICollaborator <<Interface>>{
            + getEmail()
            + hasEmail(email)
        }

        class GreenSpaceManager implements ICollaborator{

            + getGreenSpace()
        }

        interface Sortable <<Interface>>{

            + getSortedList(greenSpaceList)
        }

        class BubbleSort implements Sortable{

            + getSortedList(greenSpaceList)
        }

        class SelectionSort implements Sortable{

            + getSortedList(greenSpaceList)
        }

    }

    package "Domain.Repository" <<Folder>> {

        class Repositories {

            - Repositories()
            + getInstance() : Repositories
            + getCollaboratorRepository()
        }

        class CollaboratorRepository {

            + getCollaboratorByEmail(email)
        }
    }
}

'-------------------GreenSpaceMapper-------------------
GreenSpaceMapper ..> GreenSpaceDto
GreenSpaceMapper ..> GreenSpace

'-------------------Instance-------------------
Repositories -> Repositories : instance
ApplicationSession -> ApplicationSession : instance

'-------------------UI-------------------
ListGreenSpacesUI ..> ListGreenSpacesController
ListGreenSpacesUI ..> GreenSpaceDto

'-------------------Controller-------------------
ListGreenSpacesController ...> Repositories : repositories
ListGreenSpacesController ...> ApplicationSession
ListGreenSpacesController ...> UserSession
ListGreenSpacesController ...> CollaboratorRepository
ListGreenSpacesController ...> ICollaborator
ListGreenSpacesController ...> GreenSpace
ListGreenSpacesController ...> GreenSpaceManager
ListGreenSpacesController ...> GreenSpaces
ListGreenSpacesController ...> Sortable
ListGreenSpacesController ...> GreenSpaceMapper
ListGreenSpacesController ...> GreenSpaceDto

'-------------------ApplicationSession-------------------
ApplicationSession --> "1" UserSession : userSession

'-------------------Repositories-------------------
Repositories ---> "1" CollaboratorRepository : CollaboratorRepository

'-------------------CollaboratorRepository-------------------
CollaboratorRepository "1"  ---> "*" ICollaborator : collaboratorLis

'-------------------GreenSpaceManager-------------------
GreenSpaceManager "1" --> "1" GreenSpaces : greenSpaces

'-------------------GreenSpaces-------------------
GreenSpaces "1" -> "*" GreenSpace : greenSpaceList

'-------------------Sortable-------------------
Sortable "1" <- "*" GreenSpaces : makes use of

@enduml