@startuml
'skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype orto

skinparam classAttributeIconSize "1"

package "UI" <<Folder>> {
    class ConsultAssignedTasksListUI {
    }
}


package "Controller" <<Folder>> {

    class ConsultAssignedTasksController {
        + getTasksBetweenTwoDates(startDate, endDate, status)
        - getCollaboratorFromSession()
    }

}

'left to right direction
package "Domain" <<Folder>> {

    package "Domain.Application" <<Folder>> {

        class ApplicationSession
        {
            + static getInstance()
            + getCurrentSession()
        }

        class UserSession
        {
            + getUserEmail()
        }
    }

    package "Domain.Model" <<Folder>> {

        interface GreenSpace {
            + getName()
            + getArea()
            + getAddress()
        }

        class Team{
            + hasTeamByCollaborator(collaborator)

        }

        class Garden implements GreenSpace{
            - String name
            - int area
            - Address

            + Garden(name,area,streetName,postCode)
            + getName()
            + getArea()
            + getAddress()
        }

        class MediumPark implements GreenSpace{
            - String name
            - int area
            - Address

            + getName()
            + getArea()
            + getAddress()
            + MediumPark(name,area,streetName,postCode)
        }

        class LargePark implements GreenSpace{
            - String name
            - int area
            - Address

            + getName()
            + getArea()
            + getAddress()
            + LargePark(name,area,streetName,postCode)
        }

        interface ICollaborator{
            + getName()
            + getListSkill()
            + getJob()
            + getDateOfBirth()
            + getAdmissionDate()
            + getAddress()
            + getDocument()
            + getPhoneNumber()
            + getEmail()
            + getTaxpayer()
            + hasEmail(email)

        }

        class Document{
            - int documentNumber
        }

        class DocumentType{
            - String documentType
        }

        class Address {
            - String streetName
            - int doorNumber

            + Address(streetName, postCodeNumber,localization)
            - validation()
        }

        class PostCode{
            - String postCodeNumber
            - String localization

            + PostCode(postCodeNumber,localization)
            - validation()
        }

        class Task {
            - String taskDescription

            + Task(taskDescription)
        }

        class TasksAgenda {

            + filterTasksByStatusDate(taskListTeam, status, startDate, endDate)
            + sortTaskAgendaByDate(filteredTaskListTeam)
            - addTaskListTeam()
            - addFilteredTaskListTeam()
        }

        class TaskAgenda {
            - String urgency
            - int expectedDuration
            - String status
            - Date startDate
            - Date endDate

            + TaskAgenda(greenSpace, task, urgency, duration, startDate, endDate)
            - validateTaskAgenda()
            - hasTaskByTeam(team)
            - hasStatus(status)
            - isBetweenDates(startDate, endDate)
        }

        class Collaborator implements ICollaborator{
            - String name
            - Date dateOfBirth
            - Date admissionDate
            - String email
            - int taxpayer

            + isEquals(collaborator)
        }

        class Agenda{

            + Agenda()
            + getTaskListByTeam(team)
            + filterTasksByStatusDate(taskListTeam, status, startDate, endDate)
            + sortTaskAgendaByDate(filteredTaskListTeam)
        }

    }

    package "Domain.Repository" <<Folder>> {

        class Repositories {

            - Repositories()
            + getInstance() : Repositories
            + getCollaboratorRepository()
            + getTeamRepository();
            + getAgenda()
        }

        class CollaboratorRepository {

            + getCollaboratorByEmail(email)
        }

        class TeamRepository {

            + getTeamByCollaborator(collaborator)
        }
    }
}

'-------------------Instance-------------------
Repositories -> Repositories : instance
ApplicationSession -> ApplicationSession : instance

'-------------------UI-------------------
ConsultAssignedTasksListUI ..> ConsultAssignedTasksController

'-------------------Controller-------------------
ConsultAssignedTasksController ...> Repositories : repositories
ConsultAssignedTasksController ...> ApplicationSession
ConsultAssignedTasksController ...> UserSession
ConsultAssignedTasksController ...> CollaboratorRepository
ConsultAssignedTasksController ...> TeamRepository
ConsultAssignedTasksController ...> ICollaborator
ConsultAssignedTasksController ...> GreenSpace
ConsultAssignedTasksController ...> Task
ConsultAssignedTasksController ...> TaskAgenda
ConsultAssignedTasksController ...> Agenda
ConsultAssignedTasksController ...> Team
ConsultAssignedTasksController ...> Address
ConsultAssignedTasksController ...> PostCode

'-------------------ApplicationSession-------------------
ApplicationSession --> "1" UserSession : userSession

'-------------------Repositories-------------------
Repositories ---> "1" CollaboratorRepository : CollaboratorRepository
Repositories -> "1" Agenda : Agenda
Repositories --> "1" TeamRepository : TeamRepository

'-------------------CollaboratorRepository-------------------
CollaboratorRepository "1"  --> "*" ICollaborator : collaboratorList

'-------------------TeamRepository-------------------
TeamRepository "1" -> "*" Team : teamList

'-------------------Address-------------------
Address "1..*" *-- "1" PostCode : postCode
ICollaborator "1..*" *---- "1" Address : address

'-------------------Document-------------------
ICollaborator "1" -> "1" Document : has
Document "1..*" ->"1" DocumentType : has

'-------------------GreenSpace-------------------
GreenSpace "1" *- "1" Address : is located in

'-------------------Agenda-------------------
Agenda "1" --> "1" TasksAgenda : tasksAgenda

TasksAgenda "1" -> "*" TaskAgenda: taskAgendaList

'-------------------TaskAgenda-------------------
TaskAgenda "*" --> "1" GreenSpace : greenSpace
TaskAgenda "1..*" -> "1" Task : task
TaskAgenda "*" ---> "1" Team : team

'-------------------Team-------------------
Team "1" --> "1..*" Collaborator : collaboratorList

@enduml

