@startuml
'skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline
'skinparam linetype orto

skinparam classAttributeIconSize 0

'left to right direction


class RegisterCollaboratorController {

    + RegisterCollaboratorController()
    + registerCollaborator(name, birthdate, admission date, address, \nmobile, email, ID doc type, respective number, job name)
}

class RegisterCollaboratorUI {
}

class Collaborator {
    -String name
    -List<Skill> skill
    -Job job
    -Date dateOfBirth
    -Date admissionDate
    -Address address
    -int phoneNumber
    -String email
    -int cc
    -int cardNumber

    - validateCollaborator(collaborator)
    + Collaborator(name, dateOfBirth, admissionDate, address, phoneNumber, email, cc, cardNumber)
}

class HumanResourcesManager {
}

class Repositories {

    - Repositories()
    + getInstance() : Repositories
    + getJobRepository()
    + getCollaboratorRepository()
}

class JobRepository {
    - List <Job> job

    + getJobList()
    + getJobByName(jobName)
}

class CollaboratorRepository {
    - List <Collaborator> collaborator

    - addCollaborator(collaborator)
    - validateCollaborator(collaborator)
    + registerCollaborator(name, birthdate, admission date, address, \nmobile, email, ID doc type, respective number, job name)
}
Collaborator  <|---  HumanResourcesManager

HumanResourcesManager <--  Collaborator: createdBy

RegisterCollaboratorController .> Repositories : repositories
RegisterCollaboratorController ..> JobRepository
RegisterCollaboratorController ..> CollaboratorRepository

RegisterCollaboratorUI .> RegisterCollaboratorController

Repositories -> Repositories : instance

CollaboratorRepository --> Collaborator

@enduml